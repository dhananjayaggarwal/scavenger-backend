{"version":3,"sources":["logo.svg","common/formValidation.js","components/ContactForm.js","components/LoginForm.js","components/Header.js","App.js","reportWebVitals.js","store/reduxStore.js","index.js"],"names":["isEmpty","value","undefined","Object","keys","length","trim","validateEmail","email","type","emailRegex","test","String","toLowerCase","validateName","name","validatePincode","pincode","validatePassword","password","ContactForm","isLoggedIn","EMAIL","PHONE","PINCODE","NAME","useState","error","setEmail","setName","phone","setPhone","setPincode","pendingNotification","setPendingNotification","branchDetails","setBranchDetails","setIsBranchDataExist","useEffect","a","authenticationToken","localStorage","getItem","config","headers","axios","get","res","console","log","data","success","pendingNotifications","getPendingNotification","validateAllFields","handleChangeInput","e","target","handleBlurInput","submitContactForm","preventDefault","post","message","alert","Fragment","map","notification","index","className","onClick","sendNotification","onSubmit","onChange","onBlur","branch","insitution_name","branch_name","address","city","contact_number","incharge","pincodes","LoginForm","setIsLoggedIn","USERNAME","PASSWORD","username","setUsername","setPassword","history","useDispatch","useHistory","push","submitForm","window","setItem","token","Header","href","id","removeItem","to","App","bid","role","userData","setUserData","result","d","branchId","checkUserAuthenticated","socket","socketClient","on","emit","notification_id","err","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","state","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1578d0d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const isEmpty = (value) =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nexport const validateEmail = (email, type = \"register\") => {\r\n  if (isEmpty(email)) return \"Email is required\";\r\n  if (type !== \"register\") return false;\r\n  const emailRegex =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return !emailRegex.test(String(email).toLowerCase());\r\n};\r\n\r\nexport const validateName = (name) => {\r\n  if (isEmpty(name)) return \"Name is required\";\r\n  if (name.length < 2 && name.length > 30)\r\n    return \"Name must be between 2 to 30 chararters\";\r\n  return false;\r\n};\r\n\r\nexport const validatePincode = (pincode) => {\r\n    if (isEmpty(pincode)) return \"Pincode is required\";\r\n\r\n    const numberRegex = /^\\d+$/;\r\n     if(!numberRegex.test(String(pincode))){\r\n        return \"Pincode must contain numbers only\";\r\n     }\r\n\r\n    if (pincode.length !== 6)\r\n      return \"Pincode must be 6 numbers long\";\r\n    return false;\r\n  };\r\n\r\nexport const validatePassword = (password, type = \"register\") => {\r\n  if (isEmpty(password)) return \"Password is required\";\r\n  if (type !== \"register\") return false;\r\n  // const passwordRegex =\r\n  //   \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&-+=()])(?=\\\\S+$).{8, 20}$\";\r\n  // return passwordRegex.test(password);\r\n  return false;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { validateEmail, validatePassword, validateName, validatePincode } from \"../common/formValidation\";\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nconst ContactForm = ({isLoggedIn}) => {\r\n    const EMAIL = \"email\";\r\nconst PHONE = \"phone\";\r\nconst PASSWORD = \"password\";\r\nconst PINCODE = \"pincode\";\r\nconst NAME = \"name\";\r\n\r\n\r\n    const [email, setEmail] = useState({\r\n        value: \"\",\r\n        error: false,\r\n    });\r\n    const [name, setName] = useState({\r\n        value: \"\",\r\n        error: false,\r\n    });\r\n    const [phone, setPhone] = useState({\r\n        value: \"\",\r\n        error: false,\r\n    });\r\n    const [pincode, setPincode] = useState({\r\n        value: \"\",\r\n        error: false,\r\n    });\r\n    const [pendingNotification, setPendingNotification] = useState([]);\r\n\r\n    const [branchDetails, setBranchDetails] = useState([]);\r\n\r\n    const [isBranchDataExist, setIsBranchDataExist] = useState(false);\r\n\r\n    /*\r\n    useEffect(()=>{\r\n        //one time operation, gene\r\n    }, []);\r\n    */\r\n\r\n    useEffect(()=>{\r\n        if(isLoggedIn){\r\n            const getPendingNotification = async function (){\r\n                const authenticationToken = localStorage.getItem('token');\r\n                if(authenticationToken){\r\n                    let config = { headers: {'Authorization': 'Bearer ' + authenticationToken}};\r\n                    const res = await axios.get('https://dj-scavenger-hunt.herokuapp.com/api/user/pendingNotifications', config)\r\n                    console.log(\"yaha agye hai hum\", res);\r\n                    if(res && res.data && res.data.success){\r\n                        console.log(res.data.pendingNotifications);\r\n                        setPendingNotification(res.data.pendingNotifications);\r\n                    }\r\n                    else{\r\n                        // something went wrong\r\n                        console.log(\"nahi nahi\");\r\n                    }\r\n                }\r\n            }\r\n            getPendingNotification();\r\n        }\r\n    },[isLoggedIn])\r\n\r\n    const sendNotification = (notification) => {\r\n        //noti object\r\n        console.log(\"noti object\", notification)\r\n    }\r\n\r\n    const validateAllFields = () => {\r\n        return !validateEmail(email.value) && !validateName(name.value) && !validatePincode(pincode.value);\r\n    };\r\n\r\n    const handleChangeInput = (e) => {\r\n        let { target } = e;\r\n        switch (target.name) {\r\n            case EMAIL:\r\n                setEmail({ ...email, value: target.value });\r\n                break;\r\n            case NAME:\r\n                setName({ ...name, value: target.value });\r\n                break;\r\n            case PHONE:\r\n                setPhone({ ...phone, value: target.value });\r\n                break;\r\n            case PINCODE:\r\n                setPincode({ ...pincode, value: target.value });\r\n                break;\r\n            default:\r\n            // error_modal(\"wrong input\");\r\n        }\r\n    };\r\n\r\n    const handleBlurInput = (e) => {\r\n        const { target } = e;\r\n        switch (target.name) {\r\n            case EMAIL:\r\n                setEmail({ ...email, error: validateEmail(email.value) });\r\n                break;\r\n            case NAME:\r\n                setName({\r\n                    ...name,\r\n                    error: validateName(name.value),\r\n                });\r\n                break;\r\n            case PHONE:\r\n                setPhone({\r\n                    ...name,\r\n                });\r\n                break;\r\n            case PINCODE:\r\n                setPincode({\r\n                    ...pincode,\r\n                    error: validatePincode(pincode.value),\r\n                });\r\n                break;\r\n            default:\r\n            // error_modal(\"wrong input\");\r\n        }\r\n    };\r\n    const submitContactForm = async (e) => {\r\n        console.log(\"entered submitContactForm\", validateAllFields())\r\n        e.preventDefault();\r\n        if (validateAllFields()) {\r\n            let data = {\r\n                name: name.value,\r\n                email: email.value,\r\n                phone: phone.value,\r\n                pincode: pincode.value,\r\n\r\n            };\r\n            console.log(\"inside submitContactForm\")\r\n            //TODO call api\r\n            const res = await axios.post(\"https://dj-scavenger-hunt.herokuapp.com/api/details/customerForm\", data)\r\n            if(res.data.message){\r\n                setBranchDetails(res.data.data)\r\n                if(res.data.data.length > 0) {\r\n                    setIsBranchDataExist(true);\r\n                }else{\r\n                    setIsBranchDataExist(false);\r\n                    alert(\"No donuts for you\");\r\n                }\r\n              } else{\r\n                setIsBranchDataExist(false);\r\n                alert(\"No donuts\");\r\n              }\r\n            // history.push(\"/\");\r\n        }\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            {!isLoggedIn ?\r\n        <div className=\"contact-form\">\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <div className=\"card\" >\r\n                        <div className=\"card-body\">\r\n\r\n                            <form onSubmit={submitContactForm}>\r\n                                <div className=\"form-group mb-4\">\r\n                                    <label>Name: </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name={NAME}\r\n                                        value={name.value}\r\n                                        onChange={handleChangeInput}\r\n                                        onBlur={handleBlurInput}\r\n                                    />\r\n                                    {name.error && <small className=\"error-msg\">{name.error}</small>}\r\n                                </div>\r\n                                <div className=\"form-group mb-4\">\r\n                                    <label>Email: </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name={EMAIL}\r\n                                        value={email.value}\r\n                                        onChange={handleChangeInput}\r\n                                        onBlur={handleBlurInput}\r\n                                    />\r\n                                    {email.error && <small className=\"error-msg\">{email.error}</small>}\r\n                                </div>\r\n                                <div className=\"form-group mb-4\">\r\n                                    <label>Phone: </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name={PHONE}\r\n                                        value={phone.value}\r\n                                        onChange={handleChangeInput}\r\n                                        onBlur={handleBlurInput}\r\n                                    />\r\n                                    {phone.error && (\r\n                                        <small className=\"error-msg\">{phone.error}</small>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group mb-4\">\r\n                                    <label>Pincode: </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name={PINCODE}\r\n                                        value={pincode.value}\r\n                                        onChange={handleChangeInput}\r\n                                        onBlur={handleBlurInput}\r\n                                    />\r\n                                    {pincode.error && (\r\n                                        <small className=\"error-msg\">{pincode.error}</small>\r\n                                    )}\r\n                                </div>\r\n                                <button className=\"btn btn-success bnt-primary\">Submit</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                {branchDetails.map((branch, index)=><div key={index} className=\"card\">\r\n                <h3>{branch.insitution_name}</h3>\r\n                <h2>{branch.branch_name}</h2>\r\n                <h2>{branch.address}</h2>\r\n                <h2>{branch.city}</h2>\r\n                <h2>{branch.contact_number}</h2>\r\n                <h2>{branch.incharge}</h2>\r\n                <h2>{branch.pincodes}</h2>\r\n            </div>)}\r\n            </div>\r\n        </div> : pendingNotification.map((notification, index)=><div key={index} className=\"card\">\r\n            <h3>{notification.name}</h3>\r\n            <small>{notification.email}</small>\r\n            <p>{notification.phone}</p>\r\n            <button onClick={() => sendNotification(notification)}> Check </button>\r\n        </div>)}</React.Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default ContactForm;","import React, { useState, useEffect } from \"react\";\r\nimport { validateEmail, validatePassword, validateName } from \"../common/formValidation\";\r\n// import { EMAIL, PASSWORD } from \"../../constants\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { login } from \"../../actions/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = ({isLoggedIn, setIsLoggedIn}) => {\r\n  const USERNAME = \"username\";\r\nconst PHONE = \"phone\";\r\nconst PASSWORD = \"password\";\r\nconst PINCODE = \"pincode\";\r\nconst NAME = \"name\";\r\n  const [username, setUsername] = useState({\r\n    value: \"\",\r\n    error: false,\r\n  });\r\n  const [password, setPassword] = useState({\r\n    value: \"\",\r\n    error: false,\r\n  });\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    console.log('loginFOrm check',isLoggedIn)\r\n    if(isLoggedIn){\r\n      history.push('/');\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const validateAllFields = () => {\r\n    return !validateName(username.value) && !validatePassword(password.value);\r\n  };\r\n\r\n  const handleChangeInput = (e) => {\r\n    let { target } = e;\r\n    switch (target.name) {\r\n      case USERNAME:\r\n        setUsername({ ...username, value: target.value });\r\n        break;\r\n      case PASSWORD:\r\n        setPassword({ ...password, value: target.value });\r\n        break;\r\n      default:\r\n      // error_modal(\"wrong input\");\r\n    }\r\n  };\r\n\r\n  const handleBlurInput = (e) => {\r\n    const { target } = e;\r\n    switch (target.name) {\r\n      case USERNAME:\r\n        setUsername({ ...username, error: validateName(username.value) });\r\n        break;\r\n      case PASSWORD:\r\n        setPassword({\r\n          ...password,\r\n          error: validatePassword(password.value, \"login\"),\r\n        });\r\n        break;\r\n      default:\r\n      // error_modal(\"wrong input\");\r\n    }\r\n  };\r\n\r\n  /*\r\n  \r\n  {\r\n    \"success\": \"true\",\r\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkJhZGxhcHVyIiwidXNlcklkIjoyLCJyb2xlIjoiQlJBTkNIIiwiYnJhbmNoSWQiOjEsImlhdCI6MTYyNTM5OTE0MiwiZXhwIjoxNjI1NDM1MTQyfQ.uylCu4L6Wj9-urY8jbsvq6LL0IKhG8YgrIX9Wt52-m8\",\r\n    \"expiresIn\": \"36000\",\r\n    \"userId\": 2,\r\n    \"role\": \"BRANCH\",\r\n    \"pendingNotifications\": []\r\n}\r\n  \r\n  \r\n  */\r\n  const submitForm = async (e) => {\r\n    e.preventDefault();\r\n    if (validateAllFields()) {\r\n      let data = {\r\n        username: username.value,\r\n        password: password.value,\r\n      };\r\n      // const formData = new FormData();\r\n      // formData.set(EMAIL, email.value);\r\n      // formData.set(PASSWORD, password.value);\r\n      // dispatch(login(data));\r\n      const res = await axios.post(\"https://dj-scavenger-hunt.herokuapp.com/api/user/login\", data)\r\n      console.log('reached');\r\n      console.log(res);\r\n      if(res.data.success){\r\n        \r\n        window.localStorage.setItem(\"token\",res.data.token);\r\n        setIsLoggedIn(true);\r\n        //battery khatam phone meet mic is on\r\n      } else{\r\n        console.log('aree');\r\n        // show something went wrong\r\n      }\r\n      \r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <form onSubmit={submitForm}>\r\n        <div className=\"form-group\">\r\n          <label>Username: </label>\r\n          <input\r\n            className=\"form-input\"\r\n            name={USERNAME}\r\n            value={username.value}\r\n            onChange={handleChangeInput}\r\n            onBlur={handleBlurInput}\r\n          />\r\n          {username.error && <small className=\"error-msg\">{username.error}</small>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password: </label>\r\n          <input\r\n            className=\"form-input\"\r\n            name={PASSWORD}\r\n            value={password.value}\r\n            onChange={handleChangeInput}\r\n            onBlur={handleBlurInput}\r\n          />\r\n          {password.error && (\r\n            <small className=\"error-msg\">{password.error}</small>\r\n          )}\r\n        </div>\r\n        <button className=\"btn bnt-primary\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Header({isLoggedIn, setIsLoggedIn}){\r\n    const removeToken = () =>{\r\n        localStorage.removeItem('token')\r\n        setIsLoggedIn(false)\r\n    }\r\n\r\n    return (\r\n\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n    <a className=\"navbar-brand\" href=\"#\">Scavenger</a>\r\n    \r\n    <div className=\"\" id=\"navbarNav\">\r\n        \r\n    <ul className=\"navbar-nav\">\r\n    {!isLoggedIn?<Link to='/login' >Login</Link> : <Link onClick={removeToken} >Logout</Link>}\r\n    </ul>\r\n    </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import logo from './logo.svg';\nimport './App.css';\n// import { socket } from \"./service/socket\";\nimport socketClient  from \"socket.io-client\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route} from 'react-router-dom'\nimport ContactForm from './components/ContactForm';\nimport LoginForm from './components/LoginForm';\nimport Header from './components/Header'\nimport axios from 'axios';\n\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userData, setUserData] = useState({bid: \"\", role: \"\"});\n  useEffect(()=>{\n    console.log('maine toh nhi kiya login', isLoggedIn)\n    const checkUserAuthenticated =  async function(){\n      const authenticationToken = localStorage.getItem('token');\n      if(authenticationToken){\n      let config = { headers: {'Authorization': 'Bearer ' + authenticationToken}};\n       const result = await axios.get('https://dj-scavenger-hunt.herokuapp.com/api/user/checkLogin', config)\n       if(result){\n         let d = {bid: result.data.branchId, role:  result.data.role}\n        setUserData(d);\n         setIsLoggedIn(true)\n         console.log('chal gaya')\n       } else{\n         localStorage.removeItem('token');\n         console.log('ni chala')\n       }\n      } else{\n        setIsLoggedIn(false);\n      }\n     }\n     checkUserAuthenticated();\n  },[])\n\n  useEffect(() => {\n    if(isLoggedIn){\n      console.log(\"socket wala chalra hai\")\n      const SOCKET_URL = \"https://dj-scavenger-hunt.herokuapp.com\";\n    const socket = socketClient(SOCKET_URL);\n    socket.on('connection', () => {\n    console.log(`I'm connected with the back-end`);\n\n      // emit event from client-side\n      socket.emit(\"join\", { \"bid\": userData.bid, \"role\": userData.role });\n    });\n\n    socket.on('notification', (data, notification_id) => {\n\t\tconsole.log(data, notification_id); \n\t\tsocket.emit(\"notification_received\", { \"bid\": userData.bid, \"nid\": notification_id });\n\t\t})\n    socket.on(\"connect_error\", (err) => { console.log(`connect_error due to ${err.message}`); });\n  } \n  }, [isLoggedIn]);\n\n\n\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Header isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n      <Route path=\"/\" exact component = {() => <ContactForm isLoggedIn={isLoggedIn} />} />      \n      <Route path='/login' exact component={() => <LoginForm isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />}  />\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux'\r\n// import rootReducer from './reducers'\r\n\r\nconst countReducer = function (state = 0, action) {\r\n    switch (action.type) {\r\n      case \"INCREMENT\":\r\n        return state + 1;\r\n      case \"DECREMENT\":\r\n        return state - 1;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const store = createStore(countReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/reduxStore';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}